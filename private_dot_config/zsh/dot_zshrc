export GPG_TTY=$(tty)

# source global shell alias && variables
[ -f "$XDG_CONFIG_HOME/shell/alias" ] && source "$XDG_CONFIG_HOME/shell/alias"
[ -f "$XDG_CONFIG_HOME/shell/vars" ] && source "$XDG_CONFIG_HOME/shell/vars"

zmodload zsh/complist
autoload -U compinit && compinit
autoload -U colors && colors

# zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'
zstyle ':completion:*' menu no # use fzf-tab instead
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
zstyle ':fzf-tab:*' switch-group '<' '>'
# zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup

setopt append_history inc_append_history share_history
setopt auto_menu menu_complete
setopt auto_param_slash # when a dir is completed, add a / instead of a trailing space
setopt no_case_glob no_case_match
setopt globdots # include dotfiles
setopt extended_glob # match ~ # ^
setopt interactive_comments # allow comments in shell
# unsetopt prompt_sp # don't autoclean blanklines
stty stop undef # disable accidental ctrl s ???
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups
setopt hist_ignore_space

WORDCHARS=${WORDCHARS/\/}

HISTSIZE=1000000
HISTFILE="$XDG_CACHE_HOME/zsh_history"
SAVEHIST="$HISTSIZE"
HISTCONTROL=ignoreboth # consecutive duplicates & commands starting with space are not saved


bindkey "^a" beginning-of-line
bindkey "^e" end-of-line
bindkey "^f" forward-char
bindkey "^b" backward-char
# bindkey "^k" kill-line
bindkey "^j" backward-word
bindkey "^k" forward-word
bindkey "^H" backward-kill-word

bindkey '^p' history-search-backward
bindkey '^n' history-search-forward
bindkey '^R' fzf-history-widget


source <(fzf --zsh)

# Python
if [[ -d ~/.pyenv/shims ]]; then
  export PATH="$HOME/.pyenv/shims:$PATH"
fi

# local/bin
if [[ -d ~/.local/bin ]];then
  export PATH="$HOME/.local/bin:$PATH"
fi

# Rust
if [[ -d ~/.cargo/bin ]]; then
  export PATH="$HOME/.cargo/bin:$PATH"
fi

# Flutter
if [[ -d ~/workspace/tools/flutter/bin ]]; then
  export PATH="$HOME/workspace/tools/flutter/bin:$PATH"
fi

# Ruby
if [[ -d /opt/homebrew/opt/ruby/bin ]]; then
  export GEM_HOME=$HOME/.gem
  export PATH="/opt/homebrew/opt/ruby/bin:$GEM_HOME/bin:$PATH"
  export LDFLAGS="-L/opt/homebrew/opt/ruby/lib"
  export CPPFLAGS="-I/opt/homebrew/opt/ruby/include"
  export PKG_CONFIG_PATH="/opt/homebrew/opt/ruby/lib/pkgconfig"
fi

# Shell integrations
if [[ -f "/opt/homebrew/bin/brew" ]] then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

function ra() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

eval "$(zoxide init zsh)"
eval "$(direnv hook zsh)"

PROMPT="%K{#3b4252}%F{#ECEFF4} %n %K{#4c566a} %~ %f%k ❯ "

# fzf-tab must be first, see README of it
source $XDG_DATA_HOME/zsh_plugins/fzf-tab/fzf-tab.plugin.zsh
source $XDG_DATA_HOME/zsh_plugins/zsh-autopair/autopair.zsh
source $XDG_DATA_HOME/zsh_plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
source $XDG_DATA_HOME/zsh_plugins/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh
